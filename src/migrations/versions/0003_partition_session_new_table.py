"""partition_session_new_table

Revision ID: 0003
Revises: 0002
Create Date: 2022-05-09 20:20:45.721707

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0003'
down_revision = '0002'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.rename_table('session', 'session_old')

    op.create_table('session',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('profile_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('agent', sa.String(length=255), nullable=False),
        sa.Column('auth_date', sa.DateTime(), nullable=False),
        sa.Column('last_active_date', sa.DateTime(), nullable=False),
        sa.Column('login_type', sa.String(length=120), nullable=False),
        sa.ForeignKeyConstraint(['profile_id'], ['profile.id'], ),
        sa.PrimaryKeyConstraint('id', 'last_active_date'),
        sa.UniqueConstraint('id', 'last_active_date', name='unique_id_last_active_date'),
        postgresql_partition_by='RANGE (last_active_date)'
    )
    op.execute(
        """SELECT partman.create_parent('public.session', 'last_active_date', 'native', 'daily');"""
    )
    with op.get_context().autocommit_block():
        op.execute(
            """CALL partman.partition_data_proc('public.session', p_interval := '1 day', p_source_table := 'public.session_old');""")

    op.execute(
        """SELECT * FROM partman.partition_gap_fill('public.session');"""
    )
    op.drop_table('session_old')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('session_new',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('profile_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('agent', sa.String(length=255), nullable=False),
        sa.Column('auth_date', sa.DateTime(), nullable=False),
        sa.Column('last_active_date', sa.DateTime(), nullable=False),
        sa.Column('login_type', sa.String(length=120), nullable=False),
        sa.ForeignKeyConstraint(['profile_id'], ['profile.id'], name='session_profile_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='session_pkey'),
        sa.UniqueConstraint('id', name='session_id_key')
    )

    with op.get_context().autocommit_block():
        op.execute("""CALL partman.undo_partition_proc('public.session', null, null, 1, 'public.session_new', false, 0, 10, false)""")

    op.drop_table('session')
    op.rename_table('session_new', 'session')
    # ### end Alembic commands ###
